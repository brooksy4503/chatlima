---
alwaysApply: true
description: Development server check and management guidelines
---
# Development Server Check

Before starting the development server, always check if it's already running to avoid port conflicts and duplicate instances.

## Development Server Commands

The main development server is started with:
```bash
pnpm dev
```

This runs `next dev --turbopack` as defined in [package.json](mdc:package.json).

## Pre-Start Checklist

Before running `pnpm dev`, always:

1. **Check if the dev server is already running:**
   ```bash
   # Check if port 3000 is in use (default Next.js port)
   lsof -ti:3000
   
   # Or check for Next.js processes
   ps aux | grep "next dev"
   ```

2. **Kill any existing dev server processes:**
   ```bash
   # Kill process on port 3000
   kill -9 $(lsof -ti:3000)
   
   # Or kill all Next.js dev processes
   pkill -f "next dev"
   ```

3. **Clear cache if needed:**
   ```bash
   # Use the fresh dev command that clears cache
   pnpm dev:fresh
   ```

## Alternative Development Commands

- `pnpm dev:fresh` - Clears cache and starts dev server
- `pnpm build` - Builds for production
- `pnpm start` - Starts production server

## Port Configuration

The development server runs on port 3000 by default. If you need to use a different port:

```bash
pnpm dev --port 3001
```

## Troubleshooting

If the dev server won't start:
1. Check for port conflicts
2. Clear the `.next` cache directory
3. Restart the terminal session
4. Check for any hanging processes

Always ensure only one development server instance is running at a time to avoid resource conflicts and ensure proper development workflow.
